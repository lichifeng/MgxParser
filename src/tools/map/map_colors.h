/***************************************************************
 * \file       map_colors.h
 * \author     PATRICK LI (admin@aocrec.com)
 * \date       2022/11/8
 * \copyright  Copyright (c) 2020-2022
 ***************************************************************/

#ifndef MGXPARSER_MAP_COLORS_H_
#define MGXPARSER_MAP_COLORS_H_

#include <cstdint>

/*
color[A][B][C]
A: terrian ID
B: elevation code 0, 1, 2
    if (isset($mapData[$y + 1][$x + 1])) {
                        $bottomRight = $mapData[$y + 1][$x + 1];
                        if ($bottomRight->elevation < $tile->elevation) {
                            $variation = 0;
                        } else if ($bottomRight->elevation > $tile->elevation) {
                            $variation = 2;
                        }
                    }
C: {R, G, B} of color
*/

constexpr uint8_t kMapColors[100][3][3] = {{\
{0, 169, 0}, \
{51, 151, 39}, \
{0, 141, 0}, \
}, \
{\
{48, 93, 182}, \
{48, 93, 182}, \
{48, 93, 182}, \
}, \
{\
{248, 201, 138}, \
{232, 180, 120}, \
{189, 150, 111}, \
}, \
{\
{243, 170, 92}, \
{228, 162, 82}, \
{218, 156, 105}, \
}, \
{\
{84, 146, 176}, \
{84, 146, 176}, \
{84, 146, 176}, \
}, \
{\
{0, 169, 0}, \
{51, 151, 39}, \
{0, 141, 0}, \
}, \
{\
{243, 170, 92}, \
{228, 162, 82}, \
{218, 156, 105}, \
}, \
{\
{138, 139, 87}, \
{130, 136, 77}, \
{118, 130, 65}, \
}, \
{\
{138, 139, 87}, \
{130, 136, 77}, \
{118, 130, 65}, \
}, \
{\
{0, 169, 0}, \
{51, 151, 39}, \
{0, 141, 0}, \
}, \
{\
{37, 116, 57}, \
{21, 118, 21}, \
{0, 114, 0}, \
}, \
{\
{243, 170, 92}, \
{228, 162, 82}, \
{218, 156, 105}, \
}, \
{\
{0, 169, 0}, \
{51, 151, 39}, \
{0, 141, 0}, \
}, \
{\
{37, 116, 57}, \
{21, 118, 21}, \
{0, 114, 0}, \
}, \
{\
{248, 201, 138}, \
{232, 180, 120}, \
{189, 150, 111}, \
}, \
{\
{48, 93, 182}, \
{48, 93, 182}, \
{48, 93, 182}, \
}, \
{\
{0, 169, 0}, \
{51, 151, 39}, \
{0, 141, 0}, \
}, \
{\
{37, 116, 57}, \
{21, 118, 21}, \
{0, 114, 0}, \
}, \
{\
{37, 116, 57}, \
{21, 118, 21}, \
{0, 114, 0}, \
}, \
{\
{37, 116, 57}, \
{21, 118, 21}, \
{0, 114, 0}, \
}, \
{\
{37, 116, 57}, \
{21, 118, 21}, \
{0, 114, 0}, \
}, \
{\
{37, 116, 57}, \
{21, 118, 21}, \
{0, 114, 0}, \
}, \
{\
{0, 74, 161}, \
{0, 74, 161}, \
{0, 74, 161}, \
}, \
{\
{0, 74, 187}, \
{0, 74, 187}, \
{0, 74, 187}, \
}, \
{\
{243, 170, 92}, \
{228, 162, 82}, \
{218, 156, 105}, \
}, \
{\
{243, 170, 92}, \
{228, 162, 82}, \
{218, 156, 105}, \
}, \
{\
{152, 192, 240}, \
{152, 192, 240}, \
{152, 192, 240}, \
}, \
{\
{243, 170, 92}, \
{228, 162, 82}, \
{218, 156, 105}, \
}, \
{\
{48, 93, 182}, \
{48, 93, 182}, \
{48, 93, 182}, \
}, \
{\
{138, 139, 87}, \
{130, 136, 77}, \
{118, 130, 65}, \
}, \
{\
{138, 139, 87}, \
{130, 136, 77}, \
{118, 130, 65}, \
}, \
{\
{138, 139, 87}, \
{130, 136, 77}, \
{118, 130, 65}, \
}, \
{\
{0, 169, 0}, \
{51, 151, 39}, \
{0, 141, 0}, \
}, \
{\
{243, 170, 92}, \
{228, 162, 82}, \
{218, 156, 105}, \
}, \
{\
{0, 169, 0}, \
{51, 151, 39}, \
{0, 141, 0}, \
}, \
{\
{152, 192, 240}, \
{152, 192, 240}, \
{152, 192, 240}, \
}, \
{\
{243, 170, 92}, \
{228, 162, 82}, \
{218, 156, 105}, \
}, \
{\
{152, 192, 240}, \
{152, 192, 240}, \
{152, 192, 240}, \
}, \
{\
{243, 170, 92}, \
{228, 162, 82}, \
{218, 156, 105}, \
}, \
{\
{243, 170, 92}, \
{228, 162, 82}, \
{189, 209, 253}, \
}, \
{\
{243, 170, 92}, \
{228, 162, 82}, \
{218, 156, 105}, \
}, \
{\
{243, 170, 92}, \
{228, 162, 82}, \
{218, 156, 105}, \
}, \
{\
{243, 170, 92}, \
{228, 162, 82}, \
{218, 156, 105}, \
}, \
{\
{243, 170, 92}, \
{228, 162, 82}, \
{218, 156, 105}, \
}, \
{\
{0, 169, 0}, \
{51, 151, 39}, \
{0, 141, 0}, \
}, \
{\
{248, 201, 138}, \
{232, 180, 120}, \
{189, 150, 111}, \
}, \
{\
{248, 201, 138}, \
{232, 180, 120}, \
{189, 150, 111}, \
}, \
{\
{28, 28, 28}, \
{28, 28, 28}, \
{28, 28, 28}, \
}, \
{\
{37, 116, 57}, \
{21, 118, 21}, \
{0, 114, 0}, \
}, \
{\
{37, 116, 57}, \
{21, 118, 21}, \
{0, 114, 0}, \
}, \
{\
{37, 116, 57}, \
{21, 118, 21}, \
{0, 114, 0}, \
}, \
{\
{248, 201, 138}, \
{232, 180, 120}, \
{189, 150, 111}, \
}, \
{\
{248, 201, 138}, \
{232, 180, 120}, \
{189, 150, 111}, \
}, \
{\
{248, 201, 138}, \
{232, 180, 120}, \
{189, 150, 111}, \
}, \
{\
{84, 146, 176}, \
{84, 146, 176}, \
{84, 146, 176}, \
}, \
{\
{37, 116, 57}, \
{21, 118, 21}, \
{0, 114, 0}, \
}, \
{\
{37, 116, 57}, \
{21, 118, 21}, \
{0, 114, 0}, \
}, \
{\
{0, 74, 161}, \
{0, 74, 161}, \
{0, 74, 161}, \
}, \
{\
{0, 84, 176}, \
{0, 84, 176}, \
{0, 84, 176}, \
}, \
{\
{84, 146, 176}, \
{84, 146, 176}, \
{84, 146, 176}, \
}, \
{\
{0, 169, 0}, \
{51, 151, 39}, \
{0, 141, 0}, \
}, \
{\
{243, 170, 92}, \
{228, 162, 82}, \
{218, 156, 105}, \
}, \
{\
{0, 169, 0}, \
{51, 151, 39}, \
{0, 141, 0}, \
}, \
{\
{138, 139, 87}, \
{130, 136, 77}, \
{118, 130, 65}, \
}, \
{\
{138, 139, 87}, \
{130, 136, 77}, \
{118, 130, 65}, \
}, \
{\
{138, 139, 87}, \
{130, 136, 77}, \
{118, 130, 65}, \
}, \
{\
{138, 139, 87}, \
{130, 136, 77}, \
{118, 130, 65}, \
}, \
{\
{138, 139, 87}, \
{130, 136, 77}, \
{118, 130, 65}, \
}, \
{\
{0, 169, 0}, \
{51, 151, 39}, \
{0, 141, 0}, \
}, \
{\
{0, 169, 0}, \
{51, 151, 39}, \
{0, 141, 0}, \
}, \
{\
{0, 169, 0}, \
{51, 151, 39}, \
{0, 141, 0}, \
}, \
{\
{0, 169, 0}, \
{51, 151, 39}, \
{0, 141, 0}, \
}, \
{\
{0, 169, 0}, \
{51, 151, 39}, \
{0, 141, 0}, \
}, \
{\
{0, 169, 0}, \
{51, 151, 39}, \
{0, 141, 0}, \
}, \
{\
{0, 169, 0}, \
{51, 151, 39}, \
{0, 141, 0}, \
}, \
{\
{0, 169, 0}, \
{51, 151, 39}, \
{0, 141, 0}, \
}, \
{\
{0, 169, 0}, \
{51, 151, 39}, \
{0, 141, 0}, \
}, \
{\
{0, 169, 0}, \
{51, 151, 39}, \
{0, 141, 0}, \
}, \
{\
{0, 169, 0}, \
{51, 151, 39}, \
{0, 141, 0}, \
}, \
{\
{0, 169, 0}, \
{51, 151, 39}, \
{0, 141, 0}, \
}, \
{\
{0, 169, 0}, \
{51, 151, 39}, \
{0, 141, 0}, \
}, \
{\
{0, 169, 0}, \
{51, 151, 39}, \
{0, 141, 0}, \
}, \
{\
{0, 169, 0}, \
{51, 151, 39}, \
{0, 141, 0}, \
}, \
{\
{0, 169, 0}, \
{51, 151, 39}, \
{0, 141, 0}, \
}, \
{\
{0, 169, 0}, \
{51, 151, 39}, \
{0, 141, 0}, \
}, \
{\
{0, 169, 0}, \
{51, 151, 39}, \
{0, 141, 0}, \
}, \
{\
{0, 169, 0}, \
{51, 151, 39}, \
{0, 141, 0}, \
}, \
{\
{0, 169, 0}, \
{51, 151, 39}, \
{0, 141, 0}, \
}, \
{\
{0, 169, 0}, \
{51, 151, 39}, \
{0, 141, 0}, \
}, \
{\
{0, 169, 0}, \
{51, 151, 39}, \
{0, 141, 0}, \
}, \
{\
{84, 146, 176}, \
{84, 146, 176}, \
{84, 146, 176}, \
}, \
{\
{84, 146, 176}, \
{84, 146, 176}, \
{84, 146, 176}, \
}, \
{\
{84, 146, 176}, \
{84, 146, 176}, \
{84, 146, 176}, \
}, \
{\
{84, 146, 176}, \
{84, 146, 176}, \
{84, 146, 176}, \
}, \
{\
{84, 146, 176}, \
{84, 146, 176}, \
{84, 146, 176}, \
}, \
{\
{48, 93, 182}, \
{48, 93, 182}, \
{48, 93, 182}, \
}, \
{\
{48, 93, 182}, \
{48, 93, 182}, \
{48, 93, 182}, \
}, \
{\
{48, 93, 182}, \
{48, 93, 182}, \
{48, 93, 182}, \
}, \
{\
{48, 93, 182}, \
{48, 93, 182}, \
{48, 93, 182}, \
}, \
{\
{48, 93, 182}, \
{48, 93, 182}, \
{48, 93, 182}, \
}\
};

constexpr int kPlayerColors[][4] = {
        {0,   0,   255, 255}, //   0 = > '#0000ff',
        {255, 0,   0,   255}, //   1 = > '#ff0000',
        {0,   255, 0,   255}, //   2 = > '#00ff00',
        {255, 255, 0,   255}, //   3 = > '#ffff00',
        {0,   255, 255, 255}, //   4 = > '#00ffff',
        {255, 0,   255, 255}, //   5 = > '#ff00ff',
        {67,  67,  67,  255}, //   6 = > '#434343',
        {255, 130, 1,   255}, //   7 = > '#ff8201',
        {0,   0,   0,   255}, //   8 = > '#000000',
        {0,   0,   0,   255}, //   9 = > '#000000',
        {0,   0,   0,   255}, //   10 = > '#000000',
        {0,   0,   255, 255}, //   11 = > '#0000ff',
        {255, 255, 0,   255}, //   12 = > '#ffff00',
        {255, 255, 255, 255}, //   13 = > '#ffffff',
        {255, 0,   0,   255}, //   14 = > '#ff0000',
};

#endif //MGXPARSER_MAP_COLORS_H_